name: Release Pipeline

on:
  push:
    tags: ['v*.*.*']

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 45

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Установка зависимостей с разделением по ОС
      - name: Install dependencies
        shell: bash
        run: |
          case "$RUNNER_OS" in
            Linux)
              sudo apt-get update -qq
              sudo apt-get install -y cmake build-essential zip rpm
              ;;
            macOS)
              brew update --quiet
              brew install cmake || brew upgrade cmake
              ;;
            Windows)
              choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
              choco install wixtoolset -y --no-progress
              refreshenv
              ;;
          esac
          cmake --version

      # Сборка проекта
      - name: Configure and Build
        shell: bash
        run: |
          mkdir -p build
          cd build
          if [ "$RUNNER_OS" = "Windows" ]; then
            cmake .. -G "Visual Studio 17 2022" -A x64
            cmake --build . --config Release -- /maxcpucount:2
          else
            cmake .. -DCMAKE_BUILD_TYPE=Release
            cmake --build . --config Release --parallel 2
          fi

      # Создание артефактов
      - name: Prepare artifacts
        shell: bash
        run: |
          mkdir -p artifacts/{source,packages,binaries}

          # Исходники
          git archive --format=tar.gz -o "artifacts/source/Solver-${{ github.ref_name }}-src.tar.gz" HEAD
          git archive --format=zip -o "artifacts/source/Solver-${{ github.ref_name }}-src.zip" HEAD

          # Пакеты
          cd build
          case "$RUNNER_OS" in
            Linux) cpack -G DEB && cpack -G RPM ;;
            macOS) cpack -G DragNDrop || cpack -G ZIP ;;
            Windows) cpack -G WIX || cpack -G ZIP ;;
          esac
          cp *.deb *.rpm *.dmg *.msi *.zip ../artifacts/packages/ 2>/dev/null || :

          # Бинарники
          case "$RUNNER_OS" in
            Linux|macOS) find . -name "solver" -type f -exec cp {} ../artifacts/binaries/ \; ;;
            Windows) find . -name "solver.exe" -type f -exec cp {} ../artifacts/binaries/ \; ;;
          esac

      # Загрузка артефактов
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Solver-${{ runner.os }}
          path: artifacts/
          retention-days: 7

      # Создание релиза с проверкой прав
      - name: Create Release
        if: success()
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Solver ${{ github.ref_name }}
          artifacts: 'artifacts/*'
          token: ${{ secrets.GITHUB_TOKEN }}
