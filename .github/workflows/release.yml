name: Release Pipeline

on:
  push:
    branches: [main]
    tags: ['v*.*.*']

permissions:
  contents: write
  packages: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 45

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Установка зависимостей для Windows
      - name: Install Windows dependencies
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          # Установка WiX Toolset 3.11 (стабильная версия)
          $wixUrl = "https://github.com/wixtoolset/wix3/releases/download/wix3112rtm/wix311-binaries.zip"
          $wixPath = "$env:RUNNER_TEMP\wix"
          New-Item -ItemType Directory -Path $wixPath -Force
          Invoke-WebRequest -Uri $wixUrl -OutFile "$env:RUNNER_TEMP\wix.zip"
          Expand-Archive -Path "$env:RUNNER_TEMP\wix.zip" -DestinationPath $wixPath -Force
          echo "::add-path::$wixPath"

          # Установка CMake через Chocolatey
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
          refreshenv

      # Подготовка Windows-файлов
      - name: Prepare Windows files
        if: runner.os == 'Windows'
        shell: bash
        run: |
          # Создание обязательных файлов для WIX
          mkdir -p wix/assets

          # Лицензия в RTF формате
          echo "{\\rtf1\\ansi\\deff0{\\fonttbl{\\f0\\fnil\\fcharset0 Calibri;}}\\viewkind4\\uc1\\pard\\sa200\\sl276\\slmult1\\lang9\\f0\\fs22 Sample License Text\\par }" > wix/LICENSE.rtf

          # Иконка приложения
          curl -L -o wix/assets/icon.ico https://raw.githubusercontent.com/microsoft/fluentui-system-icons/master/assets/App%20Icon/ic_fluent_app_icon_24_filled.ico

          # WXS-файл для сборки MSI
          cat << 'EOF' > wix/installer.wxs
          <?xml version="1.0"?>
          <Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
            <Product Id="*" Name="Solver" Language="1033" Version="$(var.Version)"
                   Manufacturer="Your Company" UpgradeCode="$(var.UpgradeCode)">
              <Package InstallerVersion="200" Compressed="yes" Comments="Windows Installer Package"/>
              <Media Id="1" Cabinet="media1.cab" EmbedCab="yes"/>
              <Directory Id="TARGETDIR" Name="SourceDir">
                <Directory Id="ProgramFilesFolder">
                  <Directory Id="INSTALLDIR" Name="Solver">
                    <Component Id="ApplicationFiles" Guid="*">
                      <File Id="ApplicationFile" Source="$(var.SourcePath)" KeyPath="yes"/>
                    </Component>
                  </Directory>
                </Directory>
              </Directory>
              <Feature Id="DefaultFeature" Level="1">
                <ComponentRef Id="ApplicationFiles"/>
              </Feature>
              <Icon Id="icon.ico" SourceFile="$(var.IconPath)"/>
              <Property Id="ARPPRODUCTICON" Value="icon.ico"/>
            </Product>
          </Wix>
          EOF

      # Сборка проекта на Windows
      - name: Build Windows package
        if: runner.os == 'Windows' && startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release

          # Сборка MSI пакета
          export WIXPATH="$RUNNER_TEMP/wix"
          "$WIXPATH/candle.exe" -dVersion=${{ github.ref_name }} \
                                -dUpgradeCode="$(uuidgen || echo '00000000-0000-0000-0000-000000000000')" \
                                -dSourcePath="$(pwd)/Release/solver.exe" \
                                -dIconPath="../wix/assets/icon.ico" \
                                ../wix/installer.wxs -out installer.wixobj

          "$WIXPATH/light.exe" installer.wixobj -out Solver-${{ github.ref_name }}-Windows.msi -ext WixUIExtension

          mkdir -p ../artifacts/packages
          cp *.msi ../artifacts/packages/

      # Остальные шаги (Linux/macOS) остаются без изменений
      # ... (добавьте здесь ваши существующие шаги для Linux/macOS)

      # Создание релиза
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: Solver ${{ github.ref_name }}
          files: |
            artifacts/packages/*
            artifacts/binaries/*
            artifacts/source/*
          draft: false
          prerelease: false
          fail_on_unmatched_files: false
