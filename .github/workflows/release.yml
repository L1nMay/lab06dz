name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install WiX Toolset
      run: choco install wixtoolset -y

    - name: Set up WiX path
      run: |
        $wixPath = "${env:ProgramFiles(x86)}\WiX Toolset v3.14\bin"
        echo "WIX_PATH=$wixPath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Create build directory
      run: mkdir build

    - name: Build and package
      shell: pwsh
      run: |
        cd build

        # Генерируем GUID (UPGRADE_GUID должен быть постоянным для всех версий)
        $UPGRADE_GUID = "YOUR-UPGRADE-GUID-HERE" # ЗАМЕНИТЕ НА РЕАЛЬНЫЙ GUID!
        if ($UPGRADE_GUID -eq "YOUR-UPGRADE-GUID-HERE") {
          Write-Host "##[error] You must replace YOUR-UPGRADE-GUID-HERE with a real GUID!"
          exit 1
        }

        $PRODUCT_GUID = [guid]::NewGuid().ToString().ToUpper()

        # Проверяем существование необходимых файлов
        if (-not (Test-Path "../LICENSE.rtf")) {
          Write-Host "##[error] LICENSE.rtf not found!"
          exit 1
        }

        if (-not (Test-Path "../assets/icon.ico")) {
          Write-Host "##[error] icon.ico not found in assets directory!"
          exit 1
        }

        # Полная конфигурация WiX
        cmake .. `
          -DCPACK_GENERATOR="WIX;ZIP" `
          -DCPACK_WIX_UPGRADE_GUID="$UPGRADE_GUID" `
          -DCPACK_WIX_PRODUCT_GUID="$PRODUCT_GUID" `
          -DCPACK_PACKAGE_NAME="Solver" `
          -DCPACK_PACKAGE_VERSION="$env:GITHUB_REF_NAME" `
          -DCPACK_PACKAGE_VENDOR="Your Company" `
          -DCPACK_RESOURCE_FILE_LICENSE="../LICENSE.rtf" `
          -DCPACK_WIX_PRODUCT_ICON="../assets/icon.ico" `
          -DCPACK_WIX_UI_REF="WixUI_Minimal" `
          -DCPACK_WIX_ARCHITECTURE="x64" `
          -DCPACK_WIX_CULTURES="en-us" `
          -DCPACK_WIX_EXTENSIONS="WixUtilExtension" `
          -DCPACK_PACKAGE_EXECUTABLES="solver;solver" `
          -DCPACK_CREATE_DESKTOP_LINKS="solver" `
          -DCPACK_WIX_TEMPLATE="../cmake/WIX.template.in"

        # Сборка проекта
        cmake --build . --config Release

        # Создание пакетов
        $env:PATH = "$env:WIX_PATH;$env:PATH"
        cpack -C Release --verbose 2>&1 | Tee-Object -FilePath "cpack.log"

        # Проверяем созданные пакеты
        if (-not (Test-Path "*.msi")) {
          Write-Host "##[error] MSI creation failed!"
          Write-Host "Last 50 lines of CPack output:"
          Get-Content "cpack.log" -Tail 50
          if (Test-Path "_CPack_Packages/win64/WIX/wix.log") {
            Write-Host "WiX log contents:"
            Get-Content "_CPack_Packages/win64/WIX/wix.log"
          }
          exit 1
        }

        # Создаем директорию для артефактов
        mkdir -p "../artifacts/packages"
        Copy-Item -Path "*.msi", "*.zip" -Destination "../artifacts/packages/" -Force

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: packages
        path: artifacts/packages/*
