name: CI/CD Pipeline

on:
  push:
    branches: [main]
    tags: ['v*.*.*']

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Установка зависимостей
      - name: Install dependencies
        run: |
          case "$RUNNER_OS" in
            Linux)
              sudo apt-get update
              sudo apt-get install -y cmake build-essential zip rpm
              ;;
            macOS)
              brew install cmake --formula
              ;;
            Windows)
              choco install cmake --version=3.28.1 -y --no-progress
              ;;
          esac
          cmake --version

      # Сборка
      - name: Build
        run: |
          mkdir -p build
          cd build
          case "$RUNNER_OS" in
            Windows)
              cmake .. -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release
              cmake --build . --config Release -- /m:2
              ;;
            *)
              cmake .. -DCMAKE_BUILD_TYPE=Release
              cmake --build . --config Release --parallel 2
              ;;
          esac

      # Создание пакетов
      - name: Create packages
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cd build
          case "$RUNNER_OS" in
            Linux)
              cpack -G DEB
              cpack -G RPM
              ;;
            macOS)
              cpack -G DragNDrop
              ;;
            Windows)
              cpack -G WIX
              ;;
          esac
          mkdir -p ../artifacts
          cp *.{deb,rpm,dmg,msi} ../artifacts/ 2>/dev/null || :

      # Создание релига
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Assets
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/*
          asset_name: ${{ github.ref_name }}-${{ runner.os }}.pkg
