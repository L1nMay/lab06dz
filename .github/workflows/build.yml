name: Build and Release Packages

on:
  push:
    tags: ['v*.*.*']  # Формат v1.0.0, v2.1.3 и т.д.
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4  # Обновленная версия

    - name: Setup CMake
      uses: actions/setup-cmake@v3

    - name: Install dependencies
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt-get update
          sudo apt-get install -y build-essential rpm
        fi

    - name: Configure
      run: cmake -B build -S .

    - name: Build
      run: cmake --build build --config Release

    - name: Generate Packages
      run: |
        cd build
        case "$RUNNER_OS" in
          Linux)   cpack -G "DEB;RPM;TGZ;ZIP" ;;
          macOS)   cpack -G "DragNDrop;ZIP" ;;
          Windows) cpack -G "WIX;ZIP" ;;
        esac
        mkdir -p ../artifacts
        shopt -s extglob
        mv !(CMakeFiles) ../artifacts/ || true

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4  # Обновленная версия
      with:
        name: packages-${{ runner.os }}
        path: |
          artifacts/*.deb
          artifacts/*.rpm
          artifacts/*.tar.gz
          artifacts/*.zip
          artifacts/*.dmg
          artifacts/*.msi
        retention-days: 3

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        path: release-artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          release-artifacts/**/*
        body: |
          Automatic release for ${{ github.ref_name }}
          Contains:
          - Binary packages (.deb, .rpm, .msi, .dmg)
          - Source archives (.tar.gz, .zip)
