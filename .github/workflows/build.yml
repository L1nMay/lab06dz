name: CI/CD Pipeline

on:
  push:
    branches: [main]
    tags: ['v*.*.*']

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      # Установка зависимостей
      - name: Install dependencies
        shell: bash
        run: |
          case "$RUNNER_OS" in
            Linux)
              sudo apt-get update
              sudo apt-get install -y cmake build-essential zip
              ;;
            macOS)
              brew install cmake
              ;;
            Windows)
              choco install cmake -y
              ;;
          esac

      # Сборка проекта
      - name: Build
        shell: bash
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release

      # Проверка собранных файлов
      - name: Verify build artifacts
        shell: bash
        run: |
          echo "Build contents:"
          find build -type f -exec ls -lh {} \;
          echo "Executable files:"
          find build -type f -executable -exec ls -lh {} \;

      # Подготовка артефактов
      - name: Prepare artifacts
        shell: bash
        run: |
          mkdir -p artifacts/bin

          # Копируем все исполняемые файлы и бинарники
          find build -type f \( -executable -o -name "*.so*" -o -name "*.dylib" -o -name "*.dll" -o -name "*.exe" \) \
            -exec cp {} artifacts/bin \;

          # Для Linux копируем solver из artifacts
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            cp build/artifacts/solver artifacts/bin/
          fi

          echo "Artifacts content:"
          ls -lh artifacts/bin

      # Создание архивов
      - name: Create packages
        shell: bash
        run: |
          cd artifacts
          case "$RUNNER_OS" in
            Linux|macOS)
              tar czf ../Solver-${{ github.ref_name }}-$RUNNER_OS.tar.gz bin/
              ;;
            Windows)
              zip -r ../Solver-${{ github.ref_name }}-$RUNNER_OS.zip bin/
              ;;
          esac

          echo "Created packages:"
          ls -lh ../*.tar.gz ../*.zip || true

      # Загрузка артефактов
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Solver-${{ runner.os }}
          path: |
            Solver-*.tar.gz
            Solver-*.zip
          retention-days: 7
