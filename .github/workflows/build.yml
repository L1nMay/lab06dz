name: Build Solver

on:
  push:
    tags: ['v*.*.*']
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        if [ "${{ runner.os }}" == "Linux" ]; then
          sudo apt-get update
          sudo apt-get install -y build-essential cmake rpm
        fi

    - name: Configure
      run: cmake -B build -S .

    - name: Build
      run: cmake --build build --config Release

    - name: Package
      run: |
        cd build
        cpack -G "${{ matrix.os == 'macOS' && 'DragNDrop' || matrix.os == 'Windows' && 'WIX' || 'DEB;RPM;TGZ' }}"
        mkdir -p ../artifacts
        mv *.{deb,rpm,tar.gz,zip,dmg,msi} ../artifacts/ 2>/dev/null || true

    - uses: actions/upload-artifact@v4
      with:
        name: packages-${{ runner.os }}
        path: artifacts/*~
