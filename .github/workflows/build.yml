name: Cross-Platform Build

on:
  push:
    tags: ['v*.*.*']
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2022, macos-12]
    runs-on: ${{ matrix.os }}

    timeout-minutes: 45  # Увеличенный таймаут для всех ОС
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache CMake
        uses: actions/cache@v3
        with:
          path: |
            ~/.cmake
            ${{ github.workspace }}/build
          key: ${{ runner.os }}-cmake-${{ hashFiles('CMakeLists.txt') }}

      - name: Install system dependencies
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y build-essential zlib1g-dev
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew update
            brew install cmake pkg-config
          else
            choco install -y ninja --no-progress --ignore-checksums
          fi

      - name: Setup CMake
        uses: actions/setup-cmake@v2  # Используем проверенную v2
        with:
          cmake-version: '3.28.5'

      - name: Configure
        run: cmake -B build -S . -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: |
          cmake --build build --config Release --parallel 2
          echo "Build completed on $RUNNER_OS"

      - name: Package
        run: |
          cd build
          if [ "$RUNNER_OS" == "Linux" ]; then
            cpack -G "TGZ;DEB"
          elif [ "$RUNNER_OS" == "macOS" ]; then
            cpack -G "DragNDrop;ZIP"
          else
            cpack -G "WIX;ZIP"
          fi
          mkdir -p ../artifacts
          find . -maxdepth 1 -type f \( -name '*.tar.gz' -o -name '*.deb' -o -name '*.zip' -o -name '*.dmg' -o -name '*.msi' \) -exec mv {} ../artifacts/ \;

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packages-${{ runner.os }}
          path: artifacts/*
          retention-days: 7

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-packages

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release-packages/**/*
          generate_release_notes: true
          draft: false
