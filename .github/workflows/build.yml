name: CI/CD Pipeline

on:
  push:
    branches: [main]
    tags: ['v*.*.*']

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Полная история для работы с тегами

      # Установка зависимостей для Ubuntu
      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential zip
          cmake --version

      # Установка зависимостей для macOS
      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install cmake
          cmake --version

      # Установка зависимостей для Windows
      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          choco install cmake -y --no-progress
          refreshenv
          cmake --version

      # Сборка проекта
      - name: Configure and Build
        shell: bash
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release --parallel 2
          mkdir -p artifacts

          # Копируем результаты сборки
          case "$RUNNER_OS" in
            Linux)
              find . -type f -executable -exec cp {} artifacts/ \;
              ;;
            macOS)
              find . -type f -perm +111 -exec cp {} artifacts/ \;
              ;;
            Windows)
              find . -type f \( -name "*.exe" -o -name "*.dll" \) -exec cp {} artifacts/ \;
              ;;
          esac

      # Проверка результатов
      - name: Verify artifacts
        shell: bash
        run: |
          echo "Artifacts directory contents:"
          ls -lh build/artifacts/
          echo "Executable files found:"
          find build/artifacts/ -type f -exec ls -lh {} \;

      # Создание архивов
      - name: Create packages
        shell: bash
        run: |
          cd build/artifacts
          case "$RUNNER_OS" in
            Linux)
              tar czf ../../Solver-${{ github.ref_name }}-Linux.tar.gz *
              ;;
            macOS)
              tar czf ../../Solver-${{ github.ref_name }}-macOS.tar.gz *
              ;;
            Windows)
              zip -r ../../Solver-${{ github.ref_name }}-Windows.zip *
              ;;
          esac
          cd ../..
          echo "Created packages:"
          ls -lh Soler-*

      # Загрузка артефактов
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Solver-${{ runner.os }}
          path: |
            Solver-*.tar.gz
            Solver-*.zip
          retention-days: 7
