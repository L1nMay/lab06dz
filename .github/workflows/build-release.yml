name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Триггер только для тегов, начинающихся с 'v'

jobs:
  build-package:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            cpack_generators: "DEB;RPM;TGZ"
            artifact_name: linux-packages
          - os: macos-latest
            cpack_generators: "DragNDrop;ZIP"
            artifact_name: macos-packages
          - os: windows-latest
            cpack_generators: "WIX;ZIP"
            artifact_name: windows-packages

    steps:
    - uses: actions/checkout@v4  # Обновлено с v3 до v4

    - name: Install dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake rpm

    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release

    - name: Build
      run: cmake --build build --config Release

    - name: Package
      run: |
        cd build
        cpack -G "${{ matrix.cpack_generators }}"

    - name: Upload artifacts
      uses: actions/upload-artifact@v4  # Обновлено с v3 до v4
      with:
        name: ${{ matrix.artifact_name }}
        path: |
          build/*.deb
          build/*.rpm
          build/*.tar.gz
          build/*.dmg
          build/*.zip
          build/*.msi

  create-release:
    needs: build-package
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4  # Обновлено с v3 до v4

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2  # Обновлено с v1 до v2
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref_name }}
        body: |
          Automated release for version ${{ github.ref_name }}
          Includes packages for:
          - Linux (.deb, .rpm, .tar.gz)
          - macOS (.dmg, .zip)
          - Windows (.msi, .zip)
        files: |
          linux-packages/*
          macos-packages/*
          windows-packages/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
